{"version":3,"sources":["api/postService.js","components/button.js","components/pictureList.js","components/DragDrop.js","App.js","reportWebVitals.js","index.js"],"names":["PostService","axios","get","response","Button","letMap","area","map","ar","title","className","onClick","blob","Blob","JSON","stringify","link","document","createElement","href","window","URL","createObjectURL","download","click","PictureList","id","useDrag","type","item","collect","monitor","isDragging","drag","test","console","log","ref","DragDrop","useState","boards","setBoards","setArea","useEffect","a","getAll","data","useDrop","accept","drop","addImageToBoard","isOver","pictureList","filter","board","App","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6SAIqBA,E,kIACjB,oGAC2BC,IAAMC,IAAI,uDADrC,cACUC,EADV,yBAEWA,GAFX,2C,oECsBWC,EAzBA,SAAC,GAAY,IAElBC,EAFiB,EAAVC,KAEOC,KAAI,SAACC,GACrB,OAAOA,EAAGC,SAed,OAAO,8BAGH,wBAAQC,UAAU,MAAMC,QAdX,WACb,IAAMC,EAAO,IAAIC,KAAK,CAACC,KAAKC,UAAUV,KAChCW,EAAOC,SAASC,cAAc,KAEpCF,EAAKG,KAAOC,OAAOC,IAAIC,gBAAgBV,GACvCI,EAAKO,SAAW,gBAChBP,EAAKQ,SAQL,2D,QCGOC,EAxBK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIjB,EAAkB,EAAlBA,MAAOH,EAAW,EAAXA,KAC9B,EAA+BqB,aAAQ,iBAAO,CAC1CC,KAAM,QACNC,KAAM,CAAEH,GAAIA,GACZI,QAAS,SAACC,GAAD,MAAc,CACnBC,aAAcD,EAAQC,mBAJ9B,mBAAuBC,GAAvB,KAASD,WAAT,MAQME,EAAO5B,EAKb,OAHA6B,QAAQC,IAAIF,GAGL,8BACH,qBACIxB,UAAU,OACV2B,IAAKJ,EAFT,SAGKxB,OC0CE6B,EAvDE,WAEb,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,mBAAS,IAAjC,mBAAOjC,EAAP,KAAaoC,EAAb,KAEAC,oBAAS,sBAAC,8BAAAC,EAAA,sEACiB5C,EAAY6C,SAD7B,OACA1C,EADA,OAEA2C,EAAO3C,EAAS2C,KACtBL,EAAUK,GAHJ,2CAIL,IAGH,MAA2BC,aAAQ,iBAAO,CACxCC,OAAQ,QACRC,KAAM,SAACpB,GAAD,OAAUqB,EAAgBrB,EAAKH,KACrCI,QAAS,SAACC,GAAD,MAAc,CACrBoB,SAAUpB,EAAQoB,eAJtB,mBAAmBF,GAAnB,KAASE,OAAT,MAQID,EAAe,uCAAG,WAAOxB,GAAP,mBAAAkB,EAAA,sEACG5C,EAAY6C,SADf,OACd1C,EADc,OAEd2C,EAAO3C,EAAS2C,KACtBL,EAAUK,GACJM,EAAcN,EAAKO,QAAO,SAACC,GAAD,OAAW5B,IAAO4B,EAAM5B,MAExDgB,GAAQ,SAACpC,GAAD,4BAAcA,GAAd,CAAoB8C,EAAY,QACxCjB,QAAQC,IAAI9B,GAPQ,2CAAH,sDAWrB,OACI,gCACI,qBACII,UAAU,QADd,SAEI,qBAAKA,UAAU,eAAf,SACK8B,EAAOjC,KAAI,SAAA+C,GACR,OAAO,cAAC,EAAD,CAAa7C,MAAO6C,EAAM7C,MAAOiB,GAAI4B,EAAM5B,YAI9D,qBACIhB,UAAU,SAAS2B,IAAKY,EAD5B,SAEI,qBAAKvC,UAAU,eAAf,SACCJ,EAAKC,KAAI,SAAA+C,GAEN,OAAO,cAAC,EAAD,CAAahD,KAAMgD,EAAM7C,MAAOA,MAAO6C,EAAM7C,MAAOiB,GAAI4B,EAAM5B,YAI7E,cAAC,EAAD,CAAQpB,KAAMA,QCxCXiD,EAXH,WAEV,OACE,cAACC,EAAA,EAAD,CAAaC,QAASC,IAAtB,SACA,qBAAKhD,UAAU,MAAf,SACE,cAAC,EAAD,SCCSiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrD,SAASsD,eAAe,SAM1BZ,M","file":"static/js/main.8041f2a4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\n\r\nexport default class PostService {\r\n    static async getAll() {\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=5')\r\n        return response;\r\n    }\r\n}","\r\n\r\nconst Button = ({area}) => {\r\n\r\n    const letMap = area.map((ar) => {\r\n        return ar.title\r\n    })\r\n\r\n\r\n    const download = () => {\r\n        const blob = new Blob([JSON.stringify(letMap)])\r\n        const link = document.createElement('a')\r\n      \r\n        link.href = window.URL.createObjectURL(blob)\r\n        link.download = 'fileName.json'\r\n        link.click()\r\n      }\r\n    \r\n \r\n\r\n    return <div>\r\n        {/* <p id=\"text-val\" rows=\"4\">{letMap}</p><br/> */}\r\n        {/* <input onClick={download} type=\"button\" id=\"dwn-btn\" value=\"Download dinamically generated text file\"/> */}\r\n        <button className='btn' onClick={download}>Скачать</button>\r\n    </div>\r\n}\r\n\r\nexport default Button;","import { useDrag } from \"react-dnd\";\r\n\r\nconst PictureList = ({ id, title, area }) => {\r\n    const [{ isDragging }, drag] = useDrag(() => ({\r\n        type: \"image\",\r\n        item: { id: id },\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging(),\r\n        }),\r\n    }))\r\n\r\n    const test = area\r\n\r\n    console.log(test)\r\n      \r\n\r\n    return <div>\r\n        <div\r\n            className='item'\r\n            ref={drag}>\r\n            {title}\r\n        </div>\r\n        \r\n    </div>\r\n}\r\n\r\nexport default PictureList;","import React, { useEffect, useState } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport PostService from '../api/postService';\r\nimport Button from './button';\r\nimport PictureList from './pictureList';\r\n\r\n\r\nconst DragDrop = () => {\r\n\r\n    const [boards, setBoards] = useState([])\r\n    const [area, setArea] = useState([])\r\n\r\n    useEffect(async () => {\r\n        const response = await PostService.getAll()\r\n        const data = response.data\r\n        setBoards(data)\r\n      }, [])\r\n\r\n    \r\n      const [{ isOver }, drop] = useDrop(() => ({\r\n        accept: \"image\",\r\n        drop: (item) => addImageToBoard(item.id),\r\n        collect: (monitor) => ({\r\n          isOver: !!monitor.isOver(),\r\n        }),\r\n      }));\r\n\r\n    const addImageToBoard = async (id) => {\r\n        const response = await PostService.getAll()\r\n        const data = response.data\r\n        setBoards(data)\r\n        const pictureList = data.filter((board) => id === board.id);\r\n    \r\n        setArea((area) => [...area, pictureList[0]])\r\n        console.log(area)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className='board'>\r\n                <div className='board__title'>\r\n                    {boards.map(board => {\r\n                        return <PictureList title={board.title} id={board.id}/>\r\n                        })}\r\n                </div>\r\n            </div>\r\n            <div\r\n                className='board1' ref={drop}>\r\n                <div className='board__title'>\r\n                {area.map(board => {\r\n                    \r\n                    return <PictureList area={board.title} title={board.title} id={board.id}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <Button area={area}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DragDrop;","import { DndProvider } from 'react-dnd';\nimport './App.css';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport DragDrop from './components/DragDrop';\n\n\nconst App = () => {\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n    <div className='app'>\n      <DragDrop />\n    </div>\n    </DndProvider>\n  );\n}\n\nexport default App;\n\n// https://jsonplaceholder.typicode.com/posts?_limit=10","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}